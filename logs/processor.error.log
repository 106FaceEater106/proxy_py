some shit happened
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
OSError: [Errno 113] Connect call failed ('185.27.62.20', 53281)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionResetError: [Errno 104] Connect call failed ('45.55.185.140', 80)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('14.207.129.81', 8080)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('61.7.174.176', 52335)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('110.77.239.35', 52335)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
aiohttp.client_exceptions.ServerDisconnectedError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 100, in _create_socks_connection
    server_hostname=req.host if sslcontext else None)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/__init__.py", line 74, in create_connection
    proto=proto, flags=flags, sock=sock, local_addr=local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 100, in _create_socks_connection
    server_hostname=req.host if sslcontext else None)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/__init__.py", line 74, in create_connection
    proto=proto, flags=flags, sock=sock, local_addr=local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 100, in _create_socks_connection
    server_hostname=req.host if sslcontext else None)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/__init__.py", line 74, in create_connection
    proto=proto, flags=flags, sock=sock, local_addr=local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 871, in _create_proxy_connection
    resp = yield from proxy_resp.start(conn, True)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 624, in start
    (message, payload) = yield from self._protocol.read()
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/streams.py", line 554, in read
    yield from self._waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
some shit happened
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
some shit happened
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 871, in _create_proxy_connection
    resp = yield from proxy_resp.start(conn, True)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 624, in start
    (message, payload) = yield from self._protocol.read()
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/streams.py", line 554, in read
    yield from self._waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 871, in _create_proxy_connection
    resp = yield from proxy_resp.start(conn, True)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 624, in start
    (message, payload) = yield from self._protocol.read()
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/streams.py", line 554, in read
    yield from self._waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 898, in _create_proxy_connection
    server_hostname=req.host)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 70, in _create_proxy_connection
    return await self._create_socks_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/connector.py", line 79, in _create_socks_connection
    dst_hosts = list(await self._resolve_host(req.host, req.port))
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 715, in _resolve_host
    loop=self._loop)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 269, in _request
    conn = yield from self._connector.connect(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 392, in connect
    proto = yield from self._create_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 735, in _create_connection
    _, proto = yield from self._create_proxy_connection(req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 843, in _create_proxy_connection
    proxy_req)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 713, in create_connection
    sock, protocol_factory, ssl, server_hostname)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 736, in _create_connection_transport
    yield from waiter
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 266, in result
    raise CancelledError
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collector_checkerproxy_net.py", line 14, in collect
    res = await async_requests.get(url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 343, in _request
    break
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error in collector

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 72, in _process_collector
    proxies = await collector.collect()
  File "/home/user/python-projects/proxy_py/collectors/collectors_free_proxy_list_net/base_collector_free_proxy_list_net.py", line 16, in collect
    res = await async_requests.get(self.url)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 8, in get
    return await request('get', url, *args, **kwargs)
  File "/home/user/python-projects/proxy_py/async_requests.py", line 34, in request
    async with session.request(type, url, **kwargs) as response:
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 692, in __aenter__
    self._resp = yield from self._coro
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client.py", line 279, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/client_reqrep.py", line 637, in start
    self._continue = None
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/helpers.py", line 727, in __exit__
    raise asyncio.TimeoutError from None
concurrent.futures._base.TimeoutError
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiosocks/__init__.py", line 74, in create_connection
    proto=proto, flags=flags, sock=sock, local_addr=local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('84.43.90.46', 18815)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('116.58.235.150', 52335)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/aiohttp/connector.py", line 796, in _create_direct_connection
    local_addr=self._local_addr)
  File "/usr/lib/python3.5/asyncio/base_events.py", line 695, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.5/asyncio/base_events.py", line 682, in create_connection
    yield from self.sock_connect(sock, address)
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 402, in sock_connect
    return (yield from fut)
  File "/usr/lib/python3.5/asyncio/futures.py", line 361, in __iter__
    yield self  # This tells Task to wait for completion.
  File "/usr/lib/python3.5/asyncio/tasks.py", line 296, in _wakeup
    future.result()
  File "/usr/lib/python3.5/asyncio/futures.py", line 274, in result
    raise self._exception
  File "/usr/lib/python3.5/asyncio/selector_events.py", line 432, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
ConnectionRefusedError: [Errno 111] Connect call failed ('116.58.233.99', 52335)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
Error during processing proxy
database is locked
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
sqlite3.OperationalError: database is locked

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 837, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 223, in __exit__
    connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 262, in commit
    self._commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
  File "/usr/local/lib/python3.5/dist-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/usr/local/lib/python3.5/dist-packages/django/utils/six.py", line 685, in reraise
    raise value.with_traceback(tb)
  File "/usr/local/lib/python3.5/dist-packages/django/db/backends/base/base.py", line 236, in _commit
    return self.connection.commit()
django.db.utils.OperationalError: database is locked
some shit happened
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
some shit happened
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Error during processing proxy
Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
Traceback (most recent call last):
  File "/home/user/python-projects/proxy_py/processor.py", line 104, in _process_proxy
    proxy.save()
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 807, in save
    force_update=force_update, update_fields=update_fields)
  File "/usr/local/lib/python3.5/dist-packages/django/db/models/base.py", line 834, in save_base
    with transaction.atomic(using=using, savepoint=False):
  File "/usr/local/lib/python3.5/dist-packages/django/db/transaction.py", line 165, in __enter__
    "Your database backend doesn't behave properly when "
django.db.transaction.TransactionManagementError: Your database backend doesn't behave properly when autocommit is off. Turn it on before using 'atomic'.
some shit happened
some shit happened
